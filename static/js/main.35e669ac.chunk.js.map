{"version":3,"sources":["components/Logo/Logo.js","components/Navigation/Navigation.js","components/FaceRecog/FaceRecog.js","components/ImageLinkForm/ImageLinkForm.js","constants.js","App.js","serviceWorker.js","index.js","components/Logo/logo.png"],"names":["Logo","className","options","max","style","height","width","src","logo","alt","Navigation","display","justifyContent","FaceRecog","boxes","imageUrl","boxLocations","length","map","box","i","key","top","topRow","right","rightCol","bottom","bottomRow","left","leftCol","id","ImageLinkForm","onInputChange","onSubmit","onSubmit2","document","getElementById","value","onChange","onKeyDown","event","keyCode","type","placeholder","onClick","partclsOptns","particles","number","density","enable","value_area","line_linked","shadow","color","blur","app","Clarifai","App","apiKey","setState","input","target","calculateFaceLocations","response","faceBoxes","outputs","data","regions","info","region_info","bounding_box","image","Number","left_col","top_row","right_col","bottom_row","displayFaceBox","getPredictions","url","models","predict","FACE_DETECT_MODEL","then","catch","err","console","log","state","params","this","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","error","message","module","exports"],"mappings":"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","file":"static/js/main.35e669ac.chunk.js","sourcesContent":["import React from \"react\";\r\nimport Tilt from \"react-tilt\";\r\nimport \"./Logo.css\";\r\nimport logo from \"./logo.png\";\r\n\r\nconst Logo = () => {\r\n  return (\r\n    <div className=\"ml2 mt0\">\r\n      <Tilt\r\n        className=\"Tilt br2 shadow-2\"\r\n        options={{ max: 25 }}\r\n        style={{ height: 150, width: 150 }}\r\n      >\r\n        <div className=\"Tilt-inner\">\r\n          <img\r\n            style={{\r\n              height: \"150px\",\r\n              width: \"150px\",\r\n            }}\r\n            src={logo}\r\n            alt=\"logo\"\r\n          ></img>{\" \"}\r\n        </div>\r\n      </Tilt>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Logo;\r\n","import React from \"react\";\r\nimport Logo from \"../Logo/Logo\";\r\n\r\nconst Navigation = () => {\r\n  return (\r\n    <nav\r\n      style={{\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\",\r\n      }}\r\n      className=\"mt3\"\r\n    >\r\n      <Logo />\r\n      {/* <p className=\"f3 link dim black pa3 pointer\">Sign Out</p> */}\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","import React from \"react\";\r\nimport \"./FaceRecog.css\";\r\n\r\nconst FaceRecog = ({ boxes, imageUrl }) => {\r\n  var boxLocations = [];\r\n  if (boxes.length) {\r\n    boxLocations = boxes.map((box, i) => (\r\n      <div\r\n        key={i}\r\n        className=\"bounding-box\"\r\n        style={{\r\n          top: box.topRow,\r\n          right: box.rightCol,\r\n          bottom: box.bottomRow,\r\n          left: box.leftCol,\r\n        }}\r\n      ></div>\r\n    ));\r\n  }\r\n\r\n  return boxes.length ? (\r\n    <div className=\"faceCntr ma\">\r\n      <div className=\"absolute mt2\">\r\n        <img id=\"inputImage\" alt=\"\" src={imageUrl} width=\"700\" height=\"auto\" />\r\n        <div\r\n          className=\"bounding-box\"\r\n          style={{\r\n            top: boxes[0].topRow,\r\n            right: boxes[0].rightCol,\r\n            bottom: boxes[0].bottomRow,\r\n            left: boxes[0].leftCol,\r\n          }}\r\n        ></div>\r\n        {boxLocations}\r\n      </div>\r\n    </div>\r\n  ) : (\r\n    <div className=\"faceCntr ma\">\r\n      <div className=\"absolute mt2\">\r\n        <img id=\"inputImage\" alt=\"\" src={imageUrl} width=\"700\" height=\"auto\" />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FaceRecog;\r\n","import React from \"react\";\r\n\r\nconst ImageLinkForm = ({ onInputChange, onSubmit }) => {\r\n  const onSubmit2 = () => {\r\n    onSubmit();\r\n    let inputUrl = document.getElementById(\"link\");\r\n    inputUrl.value = \"\";\r\n  };\r\n  const enterEven = (event) => {\r\n    if (event.keyCode === 13) onSubmit2();\r\n  };\r\n  return (\r\n    <div>\r\n      <p className=\"f3\">\r\n        This Smart Brain can detect faces in a picture. Give it a try..\r\n      </p>\r\n      <div className=\"center\" style={{ width: \"65%\" }}>\r\n        <div className=\"pa4 br3 shadow-5\">\r\n          <input\r\n            id=\"link\"\r\n            onChange={onInputChange}\r\n            onKeyDown={enterEven}\r\n            className=\"f4 pa2 w-60 center\"\r\n            type=\"text\"\r\n            placeholder=\"Enter url of an Image\"\r\n          ></input>\r\n          <button\r\n            onClick={onSubmit2}\r\n            className=\"w-40 grow br3 f4 link ph1 mt3 pv2 dib white bg-light-purple\"\r\n          >\r\n            Detect\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageLinkForm;\r\n","export const partclsOptns = {\r\n  particles: {\r\n    number: {\r\n      value: 100,\r\n      density: {\r\n        enable: true,\r\n        value_area: 800,\r\n      },\r\n    },\r\n    line_linked: {\r\n      shadow: {\r\n        enable: true,\r\n        color: \"#3ca9d1\",\r\n        blur: 5,\r\n      },\r\n    },\r\n  },\r\n};\r\n","import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\n\r\nimport Navigation from \"./components/Navigation/Navigation\";\r\nimport FaceRecog from \"./components/FaceRecog/FaceRecog\";\r\nimport ImageLinkForm from \"./components/ImageLinkForm/ImageLinkForm\";\r\nimport Rank from \"./components/Rank/Rank\";\r\nimport Particles from \"react-particles-js\";\r\nimport { partclsOptns } from \"./constants\";\r\nimport Clarifai from \"clarifai\";\r\n\r\nconst app = new Clarifai.App({\r\n  apiKey: \"e883ddd9fa7e43cfbf61b2c541b67139\",\r\n});\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      input: \"\",\r\n      imageUrl: \"\",\r\n      boxes: [],\r\n    };\r\n  }\r\n\r\n  onInputChange = (event) => {\r\n    this.setState({ input: event.target.value, boxes: [], imageUrl: \"\" });\r\n  };\r\n\r\n  calculateFaceLocations = (response) => {\r\n    const faceBoxes = response.outputs[0].data.regions.map(\r\n      (info) => info.region_info.bounding_box\r\n    );\r\n    const image = document.getElementById(\"inputImage\");\r\n    const width = Number(image.width);\r\n    const height = Number(image.height);\r\n    return faceBoxes.map((box) => {\r\n      return {\r\n        leftCol: box.left_col * width,\r\n        topRow: box.top_row * height,\r\n        rightCol: width - box.right_col * width,\r\n        bottomRow: height - box.bottom_row * height,\r\n      };\r\n    });\r\n  };\r\n\r\n  displayFaceBox = (boxes) => {\r\n    this.setState({ boxes: boxes });\r\n  };\r\n\r\n  getPredictions = (url) => {\r\n    app.models\r\n      .predict(Clarifai.FACE_DETECT_MODEL, url)\r\n      .then((response) =>\r\n        this.displayFaceBox(this.calculateFaceLocations(response))\r\n      )\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  onSubmit = () => {\r\n    this.setState({ imageUrl: this.state.input }, () =>\r\n      this.getPredictions(this.state.imageUrl)\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <Particles className=\"particles\" params={partclsOptns} />\r\n        <Navigation />\r\n        {/* <Rank /> */}\r\n        <ImageLinkForm\r\n          onInputChange={this.onInputChange}\r\n          onSubmit={this.onSubmit}\r\n        />\r\n        <FaceRecog boxes={this.state.boxes} imageUrl={this.state.imageUrl} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport \"tachyons\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/logo.27777662.png\";"],"sourceRoot":""}